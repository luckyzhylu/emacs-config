(setq-default filesets-be-docile-flag 'nil)

(setq filesets-submenus '("dotemacs/" ("0 dotemacs/" ["Tree: /home/bell/.emacs.d/" (filesets-open :tree (quote ("/home/bell/.emacs.d/" "^.+\\.*$")) "dotemacs/")] "---" ("0 auto-save-list/" ["Tree: .../auto-save-list/" (filesets-open :tree (quote ("/home/bell/.emacs.d/auto-save-list/" "^.+\\.*$")) "dotemacs/")] "---" "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/auto-save-list/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/auto-save-list/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/auto-save-list/"))]) ("1 lisp/" ["Tree: .../lisp/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/" "^.+\\.*$")) "dotemacs/")] "---" ("0 auto-complete-1.3.1/, codepilot/, color-theme-6.6. ..." ("0 auto-complete-1.3.1/" ["Tree: .../auto-complete-1.3.1/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/auto-complete-1.3.1/" "^.+\\.*$")) "dotemacs/")] "---" ["0 dict/" (filesets-browse-dir "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/dict/")] ["1 doc/" (filesets-browse-dir "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/doc/")] ["2 etc/" (filesets-browse-dir "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/etc/")] ["3 COPYING.FDL.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/COPYING.FDL.txt") (quote "dotemacs/"))] ["4 COPYING.GPLv3.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/COPYING.GPLv3.txt") (quote "dotemacs/"))] ["5 Makefile" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/Makefile") (quote "dotemacs/"))] ["6 README.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/README.txt") (quote "dotemacs/"))] ["7 TODO.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/TODO.txt") (quote "dotemacs/"))] ["8 auto-complete-config.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/auto-complete-config.el") (quote "dotemacs/"))] ["9 auto-complete.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/auto-complete.el") (quote "dotemacs/"))] ["a fuzzy.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/fuzzy.el") (quote "dotemacs/"))] ["b popup.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/popup.el") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/auto-complete-1.3.1/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/auto-complete-1.3.1/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/"))]) ("1 codepilot/" ["Tree: .../codepilot/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/codepilot/" "^.+\\.*$")) "dotemacs/")] "---" ["0 common/" (filesets-browse-dir "/home/bell/.emacs.d/lisp/codepilot/common/")] ["1 misc/" (filesets-browse-dir "/home/bell/.emacs.d/lisp/codepilot/misc/")] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/codepilot/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/codepilot/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/codepilot/"))]) ("2 color-theme-6.6.0/" ["Tree: .../color-theme-6.6.0/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/color-theme-6.6.0/" "^.+\\.*$")) "dotemacs/")] "---" ["0 themes/" (filesets-browse-dir "/home/bell/.emacs.d/lisp/color-theme-6.6.0/themes/")] ["1 AUTHORS" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/AUTHORS") (quote "dotemacs/"))] ["2 BUGS" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/BUGS") (quote "dotemacs/"))] ["3 COPYING" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/COPYING") (quote "dotemacs/"))] ["4 ChangeLog" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/ChangeLog") (quote "dotemacs/"))] ["5 HACKING" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/HACKING") (quote "dotemacs/"))] ["6 Makefile" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/Makefile") (quote "dotemacs/"))] ["7 Makefile.defs" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/Makefile.defs") (quote "dotemacs/"))] ["8 README" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/README") (quote "dotemacs/"))] ["9 build-stamp" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/build-stamp") (quote "dotemacs/"))] ["a color-theme-autoloads.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/color-theme-autoloads.el") (quote "dotemacs/"))] ["b color-theme-autoloads.in" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/color-theme-autoloads.in") (quote "dotemacs/"))] ["c color-theme.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/color-theme.el") (quote "dotemacs/"))] ["d configure-stamp" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/configure-stamp") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/color-theme-6.6.0/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/color-theme-6.6.0/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/"))])) ("1 company-0.5/, doxymacs/, eim-2.4/" ("3 company-0.5/" ["Tree: .../company-0.5/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/company-0.5/" "^.+\\.*$")) "dotemacs/")] "---" ["0 company-abbrev.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-abbrev.el") (quote "dotemacs/"))] ["1 company-clang.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-clang.el") (quote "dotemacs/"))] ["2 company-css.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-css.el") (quote "dotemacs/"))] ["3 company-dabbrev-code.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-dabbrev-code.el") (quote "dotemacs/"))] ["4 company-dabbrev.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-dabbrev.el") (quote "dotemacs/"))] ["5 company-eclim.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-eclim.el") (quote "dotemacs/"))] ["6 company-elisp.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-elisp.el") (quote "dotemacs/"))] ["7 company-etags.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-etags.el") (quote "dotemacs/"))] ["8 company-files.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-files.el") (quote "dotemacs/"))] ["9 company-gtags.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-gtags.el") (quote "dotemacs/"))] ["a company-ispell.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-ispell.el") (quote "dotemacs/"))] ["b company-keywords.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-keywords.el") (quote "dotemacs/"))] ["c company-nxml.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-nxml.el") (quote "dotemacs/"))] ["d company-oddmuse.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-oddmuse.el") (quote "dotemacs/"))] ["e company-pysmell.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-pysmell.el") (quote "dotemacs/"))] ["f company-ropemacs.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-ropemacs.el") (quote "dotemacs/"))] ["g company-semantic.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-semantic.el") (quote "dotemacs/"))] ["h company-template.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-template.el") (quote "dotemacs/"))] ["i company-tempo.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-tempo.el") (quote "dotemacs/"))] ["j company-xcode.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-xcode.el") (quote "dotemacs/"))] ["k company.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company.el") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/company-0.5/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/company-0.5/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/company-0.5/"))]) ("4 doxymacs/" ["Tree: .../doxymacs/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/doxymacs/" "^.+\\.*$")) "dotemacs/")] "---" ["0 doxymacs.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/doxymacs/doxymacs.el") (quote "dotemacs/"))] ["1 doxymacs.elc" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/doxymacs/doxymacs.elc") (quote "dotemacs/"))] ["2 xml-parse.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/doxymacs/xml-parse.el") (quote "dotemacs/"))] ["3 xml-parse.elc" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/doxymacs/xml-parse.elc") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/doxymacs/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/doxymacs/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/doxymacs/"))]) ("5 eim-2.4/" ["Tree: .../eim-2.4/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/eim-2.4/" "^.+\\.*$")) "dotemacs/")] "---" ("0 ChangeLog, ChangeLog.1" ["0 ChangeLog" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/ChangeLog") (quote "dotemacs/"))] ["1 ChangeLog.1" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/ChangeLog.1") (quote "dotemacs/"))]) ("1 Readme, charpy.st" ["2 Readme" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/Readme") (quote "dotemacs/"))] ["3 charpy.st" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/charpy.st") (quote "dotemacs/"))]) ("2 cj.txt, cjeb.txt" ["4 cj.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/cj.txt") (quote "dotemacs/"))] ["5 cjeb.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/cjeb.txt") (quote "dotemacs/"))]) ("3 ebpy.txt, eim-cj-chars.el" ["6 ebpy.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/ebpy.txt") (quote "dotemacs/"))] ["7 eim-cj-chars.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim-cj-chars.el") (quote "dotemacs/"))]) ("4 eim-cj.el, eim-eb-map.el" ["8 eim-cj.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim-cj.el") (quote "dotemacs/"))] ["9 eim-eb-map.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim-eb-map.el") (quote "dotemacs/"))]) ("5 eim-eb.el, eim-extra.el" ["a eim-eb.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim-eb.el") (quote "dotemacs/"))] ["b eim-extra.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim-extra.el") (quote "dotemacs/"))]) ("6 eim-py.el, eim-table.el" ["c eim-py.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim-py.el") (quote "dotemacs/"))] ["d eim-table.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim-table.el") (quote "dotemacs/"))]) ("7 eim-wb-gb2312.el, eim-wb-gbk.el" ["e eim-wb-gb2312.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim-wb-gb2312.el") (quote "dotemacs/"))] ["f eim-wb-gbk.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim-wb-gbk.el") (quote "dotemacs/"))]) ("8 eim-wb.el, eim.el" ["g eim-wb.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim-wb.el") (quote "dotemacs/"))] ["h eim.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim.el") (quote "dotemacs/"))]) ("9 makefile, mergepy.pl" ["i makefile" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/makefile") (quote "dotemacs/"))] ["j mergepy.pl" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/mergepy.pl") (quote "dotemacs/"))]) ("a mywb.txt, otherpy.txt" ["k mywb.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/mywb.txt") (quote "dotemacs/"))] ["l otherpy.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/otherpy.txt") (quote "dotemacs/"))]) ("b py.txt, pychr.txt" ["m py.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/py.txt") (quote "dotemacs/"))] ["n pychr.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/pychr.txt") (quote "dotemacs/"))]) ("c pyword2tbl.pl, sanguo.txt" ["o pyword2tbl.pl" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/pyword2tbl.pl") (quote "dotemacs/"))] ["p sanguo.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/sanguo.txt") (quote "dotemacs/"))]) ("d table2chartbl.pl, wb.txt" ["q table2chartbl.pl" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/table2chartbl.pl") (quote "dotemacs/"))] ["r wb.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/wb.txt") (quote "dotemacs/"))]) ["e wbpy.txt" ((filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/wbpy.txt") (quote "dotemacs/")))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/eim-2.4/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/eim-2.4/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/eim-2.4/"))])) ("2 emms/, magit-1.0.0/, mark-multiple/" ("6 emms/" ["Tree: .../emms/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/emms/" "^.+\\.*$")) "dotemacs/")] "---" ["0 doc/" (filesets-browse-dir "/home/bell/.emacs.d/lisp/emms/doc/")] ["1 lisp/" (filesets-browse-dir "/home/bell/.emacs.d/lisp/emms/lisp/")] ["2 src/" (filesets-browse-dir "/home/bell/.emacs.d/lisp/emms/src/")] ["3 AUTHORS" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/emms/AUTHORS") (quote "dotemacs/"))] ["4 COPYING" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/emms/COPYING") (quote "dotemacs/"))] ["5 FAQ" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/emms/FAQ") (quote "dotemacs/"))] ["6 Makefile" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/emms/Makefile") (quote "dotemacs/"))] ["7 NEWS" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/emms/NEWS") (quote "dotemacs/"))] ["8 README" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/emms/README") (quote "dotemacs/"))] ["9 RELEASE" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/emms/RELEASE") (quote "dotemacs/"))] ["a emms-print-metadata.1" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/emms/emms-print-metadata.1") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/emms/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/emms/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/emms/"))]) ("7 magit-1.0.0/" ["Tree: .../magit-1.0.0/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/magit-1.0.0/" "^.+\\.*$")) "dotemacs/")] "---" ["0 50magit.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/50magit.el") (quote "dotemacs/"))] ["1 Makefile" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/Makefile") (quote "dotemacs/"))] ["2 README.md" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/README.md") (quote "dotemacs/"))] ["3 magit-key-mode.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/magit-key-mode.el") (quote "dotemacs/"))] ["4 magit-pkg.el.in" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/magit-pkg.el.in") (quote "dotemacs/"))] ["5 magit-svn.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/magit-svn.el") (quote "dotemacs/"))] ["6 magit-topgit.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/magit-topgit.el") (quote "dotemacs/"))] ["7 magit.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/magit.el") (quote "dotemacs/"))] ["8 magit.spec.in" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/magit.spec.in") (quote "dotemacs/"))] ["9 magit.texi" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/magit.texi") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/magit-1.0.0/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/magit-1.0.0/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/"))]) ("8 mark-multiple/" ["Tree: .../mark-multiple/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/mark-multiple/" "^.+\\.*$")) "dotemacs/")] "---" ["0 .gitignore" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/mark-multiple/.gitignore") (quote "dotemacs/"))] ["1 README.md" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/mark-multiple/README.md") (quote "dotemacs/"))] ["2 inline-string-rectangle.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/mark-multiple/inline-string-rectangle.el") (quote "dotemacs/"))] ["3 mark-more-like-this.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/mark-multiple/mark-more-like-this.el") (quote "dotemacs/"))] ["4 mark-multiple.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/mark-multiple/mark-multiple.el") (quote "dotemacs/"))] ["5 mm-pabbrev-integration.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/mark-multiple/mm-pabbrev-integration.el") (quote "dotemacs/"))] ["6 rename-sgml-tag.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/mark-multiple/rename-sgml-tag.el") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/mark-multiple/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/mark-multiple/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/mark-multiple/"))])) ("3 nyan-mode/, yasnippet/, ace-jump-mode.el" ("9 nyan-mode/" ["Tree: .../nyan-mode/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/nyan-mode/" "^.+\\.*$")) "dotemacs/")] "---" ["0 img/" (filesets-browse-dir "/home/bell/.emacs.d/lisp/nyan-mode/img/")] ["1 .gitignore" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/nyan-mode/.gitignore") (quote "dotemacs/"))] ["2 README.org" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/nyan-mode/README.org") (quote "dotemacs/"))] ["3 nyan-mode.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/nyan-mode/nyan-mode.el") (quote "dotemacs/"))] ["4 screenshot.png" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/nyan-mode/screenshot.png") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/nyan-mode/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/nyan-mode/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/nyan-mode/"))]) ("a yasnippet/" ["Tree: .../yasnippet/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/yasnippet/" "^.+\\.*$")) "dotemacs/")] "---" ["0 dropdown-list.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/yasnippet/dropdown-list.el") (quote "dotemacs/"))] ["1 yasnippet.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/yasnippet/yasnippet.el") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/yasnippet/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/yasnippet/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/yasnippet/"))]) ["b ace-jump-mode.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/ace-jump-mode.el") (quote "dotemacs/"))]) ("4 anything-config.el, anything.el, ascii.el" ["c anything-config.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/anything-config.el") (quote "dotemacs/"))] ["d anything.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/anything.el") (quote "dotemacs/"))] ["e ascii.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/ascii.el") (quote "dotemacs/"))]) ("5 auto-complete-clang.el, bm.el, browse-kill-ring.el" ["f auto-complete-clang.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/auto-complete-clang.el") (quote "dotemacs/"))] ["g bm.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/bm.el") (quote "dotemacs/"))] ["h browse-kill-ring.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/browse-kill-ring.el") (quote "dotemacs/"))]) ("6 code-imports.el, csv-mode.el, cursor-chg.el" ["i code-imports.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/code-imports.el") (quote "dotemacs/"))] ["j csv-mode.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/csv-mode.el") (quote "dotemacs/"))] ["k cursor-chg.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/cursor-chg.el") (quote "dotemacs/"))]) ("7 dired+.el, doc-mode.el, drag-stuff.el" ["l dired+.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/dired+.el") (quote "dotemacs/"))] ["m doc-mode.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/doc-mode.el") (quote "dotemacs/"))] ["n drag-stuff.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/drag-stuff.el") (quote "dotemacs/"))]) ("8 fill-column-indicator.el, highlight-parentheses.el ..." ["o fill-column-indicator.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/fill-column-indicator.el") (quote "dotemacs/"))] ["p highlight-parentheses.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/highlight-parentheses.el") (quote "dotemacs/"))] ["q highlight-symbol.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/highlight-symbol.el") (quote "dotemacs/"))]) ("9 highlight-tail.el, htmlize.el, ifdef.el" ["r highlight-tail.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/highlight-tail.el") (quote "dotemacs/"))] ["s htmlize.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/htmlize.el") (quote "dotemacs/"))] ["t ifdef.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/ifdef.el") (quote "dotemacs/"))]) ("a multi-term.el, plsql.el, psvn.el" ["u multi-term.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/multi-term.el") (quote "dotemacs/"))] ["v plsql.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/plsql.el") (quote "dotemacs/"))] ["w psvn.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/psvn.el") (quote "dotemacs/"))]) ("b rainbow-mode.el, recent-jump.el, smart-compile.el" ["x rainbow-mode.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/rainbow-mode.el") (quote "dotemacs/"))] ["y recent-jump.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/recent-jump.el") (quote "dotemacs/"))] ["z smart-compile.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/smart-compile.el") (quote "dotemacs/"))]) ("c sourcepair.el, sql-indent.el, sqlplus.el" ["! sourcepair.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/sourcepair.el") (quote "dotemacs/"))] ["\" sql-indent.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/sql-indent.el") (quote "dotemacs/"))] ["# sqlplus.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/sqlplus.el") (quote "dotemacs/"))]) ("d tabbar-ruler.el, tabbar.el, undo-tree.el" ["$ tabbar-ruler.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/tabbar-ruler.el") (quote "dotemacs/"))] ["% tabbar.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/tabbar.el") (quote "dotemacs/"))] ["& undo-tree.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/undo-tree.el") (quote "dotemacs/"))]) ("e unicad.el, vimpulse.el, volatile-highlights.el" ["' unicad.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/unicad.el") (quote "dotemacs/"))] ["( vimpulse.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/vimpulse.el") (quote "dotemacs/"))] [") volatile-highlights.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/volatile-highlights.el") (quote "dotemacs/"))]) ("f win-switch.el, window-numbering.el, winsav.el" ["* win-switch.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/win-switch.el") (quote "dotemacs/"))] ["+ window-numbering.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/window-numbering.el") (quote "dotemacs/"))] [", winsav.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/winsav.el") (quote "dotemacs/"))]) ("g word-count.el, xcscope.el, xgtags.el" ["- word-count.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/word-count.el") (quote "dotemacs/"))] [". xcscope.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/xcscope.el") (quote "dotemacs/"))] ["/ xgtags.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/xgtags.el") (quote "dotemacs/"))]) "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/"))]) ("2 plugin/" ["Tree: .../plugin/" (filesets-open :tree (quote ("/home/bell/.emacs.d/plugin/" "^.+\\.*$")) "dotemacs/")] "---" ["0 cedet-1.1.tar.gz" (filesets-file-open nil (quote "/home/bell/.emacs.d/plugin/cedet-1.1.tar.gz") (quote "dotemacs/"))] ["1 cscope-15.8a.tar.gz" (filesets-file-open nil (quote "/home/bell/.emacs.d/plugin/cscope-15.8a.tar.gz") (quote "dotemacs/"))] ["2 doxymacs-1.8.0.tar.gz" (filesets-file-open nil (quote "/home/bell/.emacs.d/plugin/doxymacs-1.8.0.tar.gz") (quote "dotemacs/"))] ["3 drag-stuff-master.zip" (filesets-file-open nil (quote "/home/bell/.emacs.d/plugin/drag-stuff-master.zip") (quote "dotemacs/"))] ["4 ecb-2.40.zip" (filesets-file-open nil (quote "/home/bell/.emacs.d/plugin/ecb-2.40.zip") (quote "dotemacs/"))] ["5 global-6.2.6.tar.tar" (filesets-file-open nil (quote "/home/bell/.emacs.d/plugin/global-6.2.6.tar.tar") (quote "dotemacs/"))] ["6 session-2.3a.tar.gz" (filesets-file-open nil (quote "/home/bell/.emacs.d/plugin/session-2.3a.tar.gz") (quote "dotemacs/"))] ["7 yasnippet-0.6.1c.tar.bz2" (filesets-file-open nil (quote "/home/bell/.emacs.d/plugin/yasnippet-0.6.1c.tar.bz2") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/plugin/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/plugin/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/plugin/"))]) ("3 snippets/" ["Tree: .../snippets/" (filesets-open :tree (quote ("/home/bell/.emacs.d/snippets/" "^.+\\.*$")) "dotemacs/")] "---" ("0 text-mode/" ["Tree: .../text-mode/" (filesets-open :tree (quote ("/home/bell/.emacs.d/snippets/text-mode/" "^.+\\.*$")) "dotemacs/")] "---" ["0 cc-mode/" (filesets-browse-dir "/home/bell/.emacs.d/snippets/text-mode/cc-mode/")] ["1 emacs-lisp-mode/" (filesets-browse-dir "/home/bell/.emacs.d/snippets/text-mode/emacs-lisp-mode/")] ["2 erlang-mode/" (filesets-browse-dir "/home/bell/.emacs.d/snippets/text-mode/erlang-mode/")] ["3 html-mode/" (filesets-browse-dir "/home/bell/.emacs.d/snippets/text-mode/html-mode/")] ["4 markdown-mode/" (filesets-browse-dir "/home/bell/.emacs.d/snippets/text-mode/markdown-mode/")] ["5 nxml-mode/" (filesets-browse-dir "/home/bell/.emacs.d/snippets/text-mode/nxml-mode/")] ["6 org-mode/" (filesets-browse-dir "/home/bell/.emacs.d/snippets/text-mode/org-mode/")] ["7 perl-mode/" (filesets-browse-dir "/home/bell/.emacs.d/snippets/text-mode/perl-mode/")] ["8 sh-mode/" (filesets-browse-dir "/home/bell/.emacs.d/snippets/text-mode/sh-mode/")] ["9 snippet-mode/" (filesets-browse-dir "/home/bell/.emacs.d/snippets/text-mode/snippet-mode/")] ["a email" (filesets-file-open nil (quote "/home/bell/.emacs.d/snippets/text-mode/email") (quote "dotemacs/"))] ["b time" (filesets-file-open nil (quote "/home/bell/.emacs.d/snippets/text-mode/time") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/snippets/text-mode/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/snippets/text-mode/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/snippets/text-mode/"))]) "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/snippets/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/snippets/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/snippets/"))]) ["4 .emacs" (filesets-file-open nil (quote "/home/bell/.emacs.d/.emacs") (quote "dotemacs/"))] ["5 ac-comphist.dat" (filesets-file-open nil (quote "/home/bell/.emacs.d/ac-comphist.dat") (quote "dotemacs/"))] ["6 filesets-cache.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/filesets-cache.el") (quote "dotemacs/"))] ["7 init-basic.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/init-basic.el") (quote "dotemacs/"))] ["8 init-misc.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/init-misc.el") (quote "dotemacs/"))] ["9 init-misc.el~" (filesets-file-open nil (quote "/home/bell/.emacs.d/init-misc.el~") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/"))] ["Rebuild this submenu" (filesets-rebuild-this-submenu (quote "dotemacs/"))]) "temp" ("1 temp" ["Files: temp" (filesets-open (quote :files) (quote "temp"))] "---" "---" ["Close all files" (filesets-close (quote :files) (quote "temp"))] ["Run Command" (filesets-run-cmd nil (quote "temp") (quote :files))] ["Add current buffer" (filesets-add-buffer (quote "temp") (current-buffer))] ["Remove current buffer" (filesets-remove-buffer (quote "temp") (current-buffer))] ["Rebuild this submenu" (filesets-rebuild-this-submenu (quote "temp"))]) "~/" ("2 ~/" ["Files: ~/" (filesets-open (quote :files) (quote "~/"))] "---" ["0 .bash_profile" (filesets-file-open nil (quote "~/.bash_profile") (quote "~/"))] ["1 .bashrc" (filesets-file-open nil (quote "~/.bashrc") (quote "~/"))] ["2 .emacs" (filesets-file-open nil (quote "~/.emacs") (quote "~/"))] ["3 .emacs-places" (filesets-file-open nil (quote "~/.emacs-places") (quote "~/"))] ["4 .emacs.desktop" (filesets-file-open nil (quote "~/.emacs.desktop") (quote "~/"))] ["5 .notes" (filesets-file-open nil (quote "~/.notes") (quote "~/"))] ["6 .profile" (filesets-file-open nil (quote "~/.profile") (quote "~/"))] ["7 .recentf" (filesets-file-open nil (quote "~/.recentf") (quote "~/"))] "---" ["Close all files" (filesets-close (quote :files) (quote "~/"))] ["Run Command" (filesets-run-cmd nil (quote "~/") (quote :files))] ["Add current buffer" (filesets-add-buffer (quote "~/") (current-buffer))] ["Remove current buffer" (filesets-remove-buffer (quote "~/") (current-buffer))] ["Rebuild this submenu" (filesets-rebuild-this-submenu (quote "~/"))]) "~/.emacs.d" ("3 ~/.emacs.d" ["Tree: ~/.emacs.d/" (filesets-open :tree (quote ("~/.emacs.d/" "^.+\\.*$")) "~/.emacs.d")] "---" ("0 auto-save-list/" ["Tree: .../auto-save-list/" (filesets-open :tree (quote ("~/.emacs.d/auto-save-list/" "^.+\\.*$")) "~/.emacs.d")] "---" "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/auto-save-list/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/auto-save-list/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/auto-save-list/"))]) ("1 lisp/" ["Tree: .../lisp/" (filesets-open :tree (quote ("~/.emacs.d/lisp/" "^.+\\.*$")) "~/.emacs.d")] "---" ("0 auto-complete-1.3.1/, codepilot/, color-theme-6.6. ..." ("0 auto-complete-1.3.1/" ["Tree: .../auto-complete-1.3.1/" (filesets-open :tree (quote ("~/.emacs.d/lisp/auto-complete-1.3.1/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 dict/" (filesets-browse-dir "~/.emacs.d/lisp/auto-complete-1.3.1/dict/")] ["1 doc/" (filesets-browse-dir "~/.emacs.d/lisp/auto-complete-1.3.1/doc/")] ["2 etc/" (filesets-browse-dir "~/.emacs.d/lisp/auto-complete-1.3.1/etc/")] ["3 COPYING.FDL.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/auto-complete-1.3.1/COPYING.FDL.txt") (quote "~/.emacs.d"))] ["4 COPYING.GPLv3.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/auto-complete-1.3.1/COPYING.GPLv3.txt") (quote "~/.emacs.d"))] ["5 Makefile" (filesets-file-open nil (quote "~/.emacs.d/lisp/auto-complete-1.3.1/Makefile") (quote "~/.emacs.d"))] ["6 README.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/auto-complete-1.3.1/README.txt") (quote "~/.emacs.d"))] ["7 TODO.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/auto-complete-1.3.1/TODO.txt") (quote "~/.emacs.d"))] ["8 auto-complete-config.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/auto-complete-1.3.1/auto-complete-config.el") (quote "~/.emacs.d"))] ["9 auto-complete.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/auto-complete-1.3.1/auto-complete.el") (quote "~/.emacs.d"))] ["a fuzzy.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/auto-complete-1.3.1/fuzzy.el") (quote "~/.emacs.d"))] ["b popup.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/auto-complete-1.3.1/popup.el") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/auto-complete-1.3.1/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/auto-complete-1.3.1/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/auto-complete-1.3.1/"))]) ("1 codepilot/" ["Tree: .../codepilot/" (filesets-open :tree (quote ("~/.emacs.d/lisp/codepilot/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 common/" (filesets-browse-dir "~/.emacs.d/lisp/codepilot/common/")] ["1 misc/" (filesets-browse-dir "~/.emacs.d/lisp/codepilot/misc/")] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/codepilot/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/codepilot/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/codepilot/"))]) ("2 color-theme-6.6.0/" ["Tree: .../color-theme-6.6.0/" (filesets-open :tree (quote ("~/.emacs.d/lisp/color-theme-6.6.0/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 themes/" (filesets-browse-dir "~/.emacs.d/lisp/color-theme-6.6.0/themes/")] ["1 AUTHORS" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/AUTHORS") (quote "~/.emacs.d"))] ["2 BUGS" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/BUGS") (quote "~/.emacs.d"))] ["3 COPYING" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/COPYING") (quote "~/.emacs.d"))] ["4 ChangeLog" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/ChangeLog") (quote "~/.emacs.d"))] ["5 HACKING" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/HACKING") (quote "~/.emacs.d"))] ["6 Makefile" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/Makefile") (quote "~/.emacs.d"))] ["7 Makefile.defs" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/Makefile.defs") (quote "~/.emacs.d"))] ["8 README" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/README") (quote "~/.emacs.d"))] ["9 build-stamp" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/build-stamp") (quote "~/.emacs.d"))] ["a color-theme-autoloads.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/color-theme-autoloads.el") (quote "~/.emacs.d"))] ["b color-theme-autoloads.in" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/color-theme-autoloads.in") (quote "~/.emacs.d"))] ["c color-theme.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/color-theme.el") (quote "~/.emacs.d"))] ["d configure-stamp" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/configure-stamp") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/color-theme-6.6.0/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/color-theme-6.6.0/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/color-theme-6.6.0/"))])) ("1 company-0.5/, doxymacs/, eim-2.4/" ("3 company-0.5/" ["Tree: .../company-0.5/" (filesets-open :tree (quote ("~/.emacs.d/lisp/company-0.5/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 company-abbrev.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-abbrev.el") (quote "~/.emacs.d"))] ["1 company-clang.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-clang.el") (quote "~/.emacs.d"))] ["2 company-css.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-css.el") (quote "~/.emacs.d"))] ["3 company-dabbrev-code.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-dabbrev-code.el") (quote "~/.emacs.d"))] ["4 company-dabbrev.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-dabbrev.el") (quote "~/.emacs.d"))] ["5 company-eclim.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-eclim.el") (quote "~/.emacs.d"))] ["6 company-elisp.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-elisp.el") (quote "~/.emacs.d"))] ["7 company-etags.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-etags.el") (quote "~/.emacs.d"))] ["8 company-files.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-files.el") (quote "~/.emacs.d"))] ["9 company-gtags.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-gtags.el") (quote "~/.emacs.d"))] ["a company-ispell.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-ispell.el") (quote "~/.emacs.d"))] ["b company-keywords.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-keywords.el") (quote "~/.emacs.d"))] ["c company-nxml.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-nxml.el") (quote "~/.emacs.d"))] ["d company-oddmuse.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-oddmuse.el") (quote "~/.emacs.d"))] ["e company-pysmell.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-pysmell.el") (quote "~/.emacs.d"))] ["f company-ropemacs.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-ropemacs.el") (quote "~/.emacs.d"))] ["g company-semantic.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-semantic.el") (quote "~/.emacs.d"))] ["h company-template.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-template.el") (quote "~/.emacs.d"))] ["i company-tempo.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-tempo.el") (quote "~/.emacs.d"))] ["j company-xcode.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-xcode.el") (quote "~/.emacs.d"))] ["k company.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company.el") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/company-0.5/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/company-0.5/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/company-0.5/"))]) ("4 doxymacs/" ["Tree: .../doxymacs/" (filesets-open :tree (quote ("~/.emacs.d/lisp/doxymacs/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 doxymacs.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/doxymacs/doxymacs.el") (quote "~/.emacs.d"))] ["1 doxymacs.elc" (filesets-file-open nil (quote "~/.emacs.d/lisp/doxymacs/doxymacs.elc") (quote "~/.emacs.d"))] ["2 xml-parse.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/doxymacs/xml-parse.el") (quote "~/.emacs.d"))] ["3 xml-parse.elc" (filesets-file-open nil (quote "~/.emacs.d/lisp/doxymacs/xml-parse.elc") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/doxymacs/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/doxymacs/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/doxymacs/"))]) ("5 eim-2.4/" ["Tree: .../eim-2.4/" (filesets-open :tree (quote ("~/.emacs.d/lisp/eim-2.4/" "^.+\\.*$")) "~/.emacs.d")] "---" ("0 ChangeLog, ChangeLog.1" ["0 ChangeLog" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/ChangeLog") (quote "~/.emacs.d"))] ["1 ChangeLog.1" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/ChangeLog.1") (quote "~/.emacs.d"))]) ("1 Readme, charpy.st" ["2 Readme" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/Readme") (quote "~/.emacs.d"))] ["3 charpy.st" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/charpy.st") (quote "~/.emacs.d"))]) ("2 cj.txt, cjeb.txt" ["4 cj.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/cj.txt") (quote "~/.emacs.d"))] ["5 cjeb.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/cjeb.txt") (quote "~/.emacs.d"))]) ("3 ebpy.txt, eim-cj-chars.el" ["6 ebpy.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/ebpy.txt") (quote "~/.emacs.d"))] ["7 eim-cj-chars.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim-cj-chars.el") (quote "~/.emacs.d"))]) ("4 eim-cj.el, eim-eb-map.el" ["8 eim-cj.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim-cj.el") (quote "~/.emacs.d"))] ["9 eim-eb-map.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim-eb-map.el") (quote "~/.emacs.d"))]) ("5 eim-eb.el, eim-extra.el" ["a eim-eb.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim-eb.el") (quote "~/.emacs.d"))] ["b eim-extra.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim-extra.el") (quote "~/.emacs.d"))]) ("6 eim-py.el, eim-table.el" ["c eim-py.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim-py.el") (quote "~/.emacs.d"))] ["d eim-table.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim-table.el") (quote "~/.emacs.d"))]) ("7 eim-wb-gb2312.el, eim-wb-gbk.el" ["e eim-wb-gb2312.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim-wb-gb2312.el") (quote "~/.emacs.d"))] ["f eim-wb-gbk.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim-wb-gbk.el") (quote "~/.emacs.d"))]) ("8 eim-wb.el, eim.el" ["g eim-wb.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim-wb.el") (quote "~/.emacs.d"))] ["h eim.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim.el") (quote "~/.emacs.d"))]) ("9 makefile, mergepy.pl" ["i makefile" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/makefile") (quote "~/.emacs.d"))] ["j mergepy.pl" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/mergepy.pl") (quote "~/.emacs.d"))]) ("a mywb.txt, otherpy.txt" ["k mywb.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/mywb.txt") (quote "~/.emacs.d"))] ["l otherpy.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/otherpy.txt") (quote "~/.emacs.d"))]) ("b py.txt, pychr.txt" ["m py.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/py.txt") (quote "~/.emacs.d"))] ["n pychr.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/pychr.txt") (quote "~/.emacs.d"))]) ("c pyword2tbl.pl, sanguo.txt" ["o pyword2tbl.pl" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/pyword2tbl.pl") (quote "~/.emacs.d"))] ["p sanguo.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/sanguo.txt") (quote "~/.emacs.d"))]) ("d table2chartbl.pl, wb.txt" ["q table2chartbl.pl" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/table2chartbl.pl") (quote "~/.emacs.d"))] ["r wb.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/wb.txt") (quote "~/.emacs.d"))]) ["e wbpy.txt" ((filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/wbpy.txt") (quote "~/.emacs.d")))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/eim-2.4/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/eim-2.4/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/eim-2.4/"))])) ("2 emms/, magit-1.0.0/, mark-multiple/" ("6 emms/" ["Tree: .../emms/" (filesets-open :tree (quote ("~/.emacs.d/lisp/emms/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 doc/" (filesets-browse-dir "~/.emacs.d/lisp/emms/doc/")] ["1 lisp/" (filesets-browse-dir "~/.emacs.d/lisp/emms/lisp/")] ["2 src/" (filesets-browse-dir "~/.emacs.d/lisp/emms/src/")] ["3 AUTHORS" (filesets-file-open nil (quote "~/.emacs.d/lisp/emms/AUTHORS") (quote "~/.emacs.d"))] ["4 COPYING" (filesets-file-open nil (quote "~/.emacs.d/lisp/emms/COPYING") (quote "~/.emacs.d"))] ["5 FAQ" (filesets-file-open nil (quote "~/.emacs.d/lisp/emms/FAQ") (quote "~/.emacs.d"))] ["6 Makefile" (filesets-file-open nil (quote "~/.emacs.d/lisp/emms/Makefile") (quote "~/.emacs.d"))] ["7 NEWS" (filesets-file-open nil (quote "~/.emacs.d/lisp/emms/NEWS") (quote "~/.emacs.d"))] ["8 README" (filesets-file-open nil (quote "~/.emacs.d/lisp/emms/README") (quote "~/.emacs.d"))] ["9 RELEASE" (filesets-file-open nil (quote "~/.emacs.d/lisp/emms/RELEASE") (quote "~/.emacs.d"))] ["a emms-print-metadata.1" (filesets-file-open nil (quote "~/.emacs.d/lisp/emms/emms-print-metadata.1") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/emms/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/emms/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/emms/"))]) ("7 magit-1.0.0/" ["Tree: .../magit-1.0.0/" (filesets-open :tree (quote ("~/.emacs.d/lisp/magit-1.0.0/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 50magit.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/magit-1.0.0/50magit.el") (quote "~/.emacs.d"))] ["1 Makefile" (filesets-file-open nil (quote "~/.emacs.d/lisp/magit-1.0.0/Makefile") (quote "~/.emacs.d"))] ["2 README.md" (filesets-file-open nil (quote "~/.emacs.d/lisp/magit-1.0.0/README.md") (quote "~/.emacs.d"))] ["3 magit-key-mode.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/magit-1.0.0/magit-key-mode.el") (quote "~/.emacs.d"))] ["4 magit-pkg.el.in" (filesets-file-open nil (quote "~/.emacs.d/lisp/magit-1.0.0/magit-pkg.el.in") (quote "~/.emacs.d"))] ["5 magit-svn.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/magit-1.0.0/magit-svn.el") (quote "~/.emacs.d"))] ["6 magit-topgit.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/magit-1.0.0/magit-topgit.el") (quote "~/.emacs.d"))] ["7 magit.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/magit-1.0.0/magit.el") (quote "~/.emacs.d"))] ["8 magit.spec.in" (filesets-file-open nil (quote "~/.emacs.d/lisp/magit-1.0.0/magit.spec.in") (quote "~/.emacs.d"))] ["9 magit.texi" (filesets-file-open nil (quote "~/.emacs.d/lisp/magit-1.0.0/magit.texi") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/magit-1.0.0/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/magit-1.0.0/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/magit-1.0.0/"))]) ("8 mark-multiple/" ["Tree: .../mark-multiple/" (filesets-open :tree (quote ("~/.emacs.d/lisp/mark-multiple/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 .gitignore" (filesets-file-open nil (quote "~/.emacs.d/lisp/mark-multiple/.gitignore") (quote "~/.emacs.d"))] ["1 README.md" (filesets-file-open nil (quote "~/.emacs.d/lisp/mark-multiple/README.md") (quote "~/.emacs.d"))] ["2 inline-string-rectangle.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/mark-multiple/inline-string-rectangle.el") (quote "~/.emacs.d"))] ["3 mark-more-like-this.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/mark-multiple/mark-more-like-this.el") (quote "~/.emacs.d"))] ["4 mark-multiple.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/mark-multiple/mark-multiple.el") (quote "~/.emacs.d"))] ["5 mm-pabbrev-integration.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/mark-multiple/mm-pabbrev-integration.el") (quote "~/.emacs.d"))] ["6 rename-sgml-tag.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/mark-multiple/rename-sgml-tag.el") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/mark-multiple/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/mark-multiple/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/mark-multiple/"))])) ("3 nyan-mode/, yasnippet/, ace-jump-mode.el" ("9 nyan-mode/" ["Tree: .../nyan-mode/" (filesets-open :tree (quote ("~/.emacs.d/lisp/nyan-mode/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 img/" (filesets-browse-dir "~/.emacs.d/lisp/nyan-mode/img/")] ["1 .gitignore" (filesets-file-open nil (quote "~/.emacs.d/lisp/nyan-mode/.gitignore") (quote "~/.emacs.d"))] ["2 README.org" (filesets-file-open nil (quote "~/.emacs.d/lisp/nyan-mode/README.org") (quote "~/.emacs.d"))] ["3 nyan-mode.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/nyan-mode/nyan-mode.el") (quote "~/.emacs.d"))] ["4 screenshot.png" (filesets-file-open nil (quote "~/.emacs.d/lisp/nyan-mode/screenshot.png") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/nyan-mode/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/nyan-mode/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/nyan-mode/"))]) ("a yasnippet/" ["Tree: .../yasnippet/" (filesets-open :tree (quote ("~/.emacs.d/lisp/yasnippet/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 dropdown-list.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/yasnippet/dropdown-list.el") (quote "~/.emacs.d"))] ["1 yasnippet.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/yasnippet/yasnippet.el") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/yasnippet/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/yasnippet/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/yasnippet/"))]) ["b ace-jump-mode.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/ace-jump-mode.el") (quote "~/.emacs.d"))]) ("4 anything-config.el, anything.el, ascii.el" ["c anything-config.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/anything-config.el") (quote "~/.emacs.d"))] ["d anything.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/anything.el") (quote "~/.emacs.d"))] ["e ascii.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/ascii.el") (quote "~/.emacs.d"))]) ("5 auto-complete-clang.el, bm.el, browse-kill-ring.el" ["f auto-complete-clang.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/auto-complete-clang.el") (quote "~/.emacs.d"))] ["g bm.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/bm.el") (quote "~/.emacs.d"))] ["h browse-kill-ring.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/browse-kill-ring.el") (quote "~/.emacs.d"))]) ("6 code-imports.el, csv-mode.el, cursor-chg.el" ["i code-imports.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/code-imports.el") (quote "~/.emacs.d"))] ["j csv-mode.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/csv-mode.el") (quote "~/.emacs.d"))] ["k cursor-chg.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/cursor-chg.el") (quote "~/.emacs.d"))]) ("7 dired+.el, doc-mode.el, drag-stuff.el" ["l dired+.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/dired+.el") (quote "~/.emacs.d"))] ["m doc-mode.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/doc-mode.el") (quote "~/.emacs.d"))] ["n drag-stuff.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/drag-stuff.el") (quote "~/.emacs.d"))]) ("8 fill-column-indicator.el, highlight-parentheses.el ..." ["o fill-column-indicator.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/fill-column-indicator.el") (quote "~/.emacs.d"))] ["p highlight-parentheses.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/highlight-parentheses.el") (quote "~/.emacs.d"))] ["q highlight-symbol.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/highlight-symbol.el") (quote "~/.emacs.d"))]) ("9 highlight-tail.el, htmlize.el, ifdef.el" ["r highlight-tail.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/highlight-tail.el") (quote "~/.emacs.d"))] ["s htmlize.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/htmlize.el") (quote "~/.emacs.d"))] ["t ifdef.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/ifdef.el") (quote "~/.emacs.d"))]) ("a multi-term.el, plsql.el, psvn.el" ["u multi-term.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/multi-term.el") (quote "~/.emacs.d"))] ["v plsql.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/plsql.el") (quote "~/.emacs.d"))] ["w psvn.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/psvn.el") (quote "~/.emacs.d"))]) ("b rainbow-mode.el, recent-jump.el, smart-compile.el" ["x rainbow-mode.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/rainbow-mode.el") (quote "~/.emacs.d"))] ["y recent-jump.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/recent-jump.el") (quote "~/.emacs.d"))] ["z smart-compile.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/smart-compile.el") (quote "~/.emacs.d"))]) ("c sourcepair.el, sql-indent.el, sqlplus.el" ["! sourcepair.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/sourcepair.el") (quote "~/.emacs.d"))] ["\" sql-indent.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/sql-indent.el") (quote "~/.emacs.d"))] ["# sqlplus.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/sqlplus.el") (quote "~/.emacs.d"))]) ("d tabbar-ruler.el, tabbar.el, undo-tree.el" ["$ tabbar-ruler.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/tabbar-ruler.el") (quote "~/.emacs.d"))] ["% tabbar.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/tabbar.el") (quote "~/.emacs.d"))] ["& undo-tree.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/undo-tree.el") (quote "~/.emacs.d"))]) ("e unicad.el, vimpulse.el, volatile-highlights.el" ["' unicad.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/unicad.el") (quote "~/.emacs.d"))] ["( vimpulse.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/vimpulse.el") (quote "~/.emacs.d"))] [") volatile-highlights.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/volatile-highlights.el") (quote "~/.emacs.d"))]) ("f win-switch.el, window-numbering.el, winsav.el" ["* win-switch.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/win-switch.el") (quote "~/.emacs.d"))] ["+ window-numbering.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/window-numbering.el") (quote "~/.emacs.d"))] [", winsav.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/winsav.el") (quote "~/.emacs.d"))]) ("g word-count.el, xcscope.el, xgtags.el" ["- word-count.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/word-count.el") (quote "~/.emacs.d"))] [". xcscope.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/xcscope.el") (quote "~/.emacs.d"))] ["/ xgtags.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/xgtags.el") (quote "~/.emacs.d"))]) "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/"))]) ("2 plugin/" ["Tree: .../plugin/" (filesets-open :tree (quote ("~/.emacs.d/plugin/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 cedet-1.1.tar.gz" (filesets-file-open nil (quote "~/.emacs.d/plugin/cedet-1.1.tar.gz") (quote "~/.emacs.d"))] ["1 cscope-15.8a.tar.gz" (filesets-file-open nil (quote "~/.emacs.d/plugin/cscope-15.8a.tar.gz") (quote "~/.emacs.d"))] ["2 doxymacs-1.8.0.tar.gz" (filesets-file-open nil (quote "~/.emacs.d/plugin/doxymacs-1.8.0.tar.gz") (quote "~/.emacs.d"))] ["3 drag-stuff-master.zip" (filesets-file-open nil (quote "~/.emacs.d/plugin/drag-stuff-master.zip") (quote "~/.emacs.d"))] ["4 ecb-2.40.zip" (filesets-file-open nil (quote "~/.emacs.d/plugin/ecb-2.40.zip") (quote "~/.emacs.d"))] ["5 global-6.2.6.tar.tar" (filesets-file-open nil (quote "~/.emacs.d/plugin/global-6.2.6.tar.tar") (quote "~/.emacs.d"))] ["6 session-2.3a.tar.gz" (filesets-file-open nil (quote "~/.emacs.d/plugin/session-2.3a.tar.gz") (quote "~/.emacs.d"))] ["7 yasnippet-0.6.1c.tar.bz2" (filesets-file-open nil (quote "~/.emacs.d/plugin/yasnippet-0.6.1c.tar.bz2") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/plugin/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/plugin/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/plugin/"))]) ("3 snippets/" ["Tree: .../snippets/" (filesets-open :tree (quote ("~/.emacs.d/snippets/" "^.+\\.*$")) "~/.emacs.d")] "---" ("0 text-mode/" ["Tree: .../text-mode/" (filesets-open :tree (quote ("~/.emacs.d/snippets/text-mode/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 cc-mode/" (filesets-browse-dir "~/.emacs.d/snippets/text-mode/cc-mode/")] ["1 emacs-lisp-mode/" (filesets-browse-dir "~/.emacs.d/snippets/text-mode/emacs-lisp-mode/")] ["2 erlang-mode/" (filesets-browse-dir "~/.emacs.d/snippets/text-mode/erlang-mode/")] ["3 html-mode/" (filesets-browse-dir "~/.emacs.d/snippets/text-mode/html-mode/")] ["4 markdown-mode/" (filesets-browse-dir "~/.emacs.d/snippets/text-mode/markdown-mode/")] ["5 nxml-mode/" (filesets-browse-dir "~/.emacs.d/snippets/text-mode/nxml-mode/")] ["6 org-mode/" (filesets-browse-dir "~/.emacs.d/snippets/text-mode/org-mode/")] ["7 perl-mode/" (filesets-browse-dir "~/.emacs.d/snippets/text-mode/perl-mode/")] ["8 sh-mode/" (filesets-browse-dir "~/.emacs.d/snippets/text-mode/sh-mode/")] ["9 snippet-mode/" (filesets-browse-dir "~/.emacs.d/snippets/text-mode/snippet-mode/")] ["a email" (filesets-file-open nil (quote "~/.emacs.d/snippets/text-mode/email") (quote "~/.emacs.d"))] ["b time" (filesets-file-open nil (quote "~/.emacs.d/snippets/text-mode/time") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/snippets/text-mode/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/snippets/text-mode/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/snippets/text-mode/"))]) "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/snippets/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/snippets/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/snippets/"))]) ["4 .emacs" (filesets-file-open nil (quote "~/.emacs.d/.emacs") (quote "~/.emacs.d"))] ["5 ac-comphist.dat" (filesets-file-open nil (quote "~/.emacs.d/ac-comphist.dat") (quote "~/.emacs.d"))] ["6 filesets-cache.el" (filesets-file-open nil (quote "~/.emacs.d/filesets-cache.el") (quote "~/.emacs.d"))] ["7 init-basic.el" (filesets-file-open nil (quote "~/.emacs.d/init-basic.el") (quote "~/.emacs.d"))] ["8 init-misc.el" (filesets-file-open nil (quote "~/.emacs.d/init-misc.el") (quote "~/.emacs.d"))] ["9 init-misc.el~" (filesets-file-open nil (quote "~/.emacs.d/init-misc.el~") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/"))] ["Rebuild this submenu" (filesets-rebuild-this-submenu (quote "~/.emacs.d"))])))

(setq filesets-menu-cache '(("0 dotemacs/" ["Tree: /home/bell/.emacs.d/" (filesets-open :tree (quote ("/home/bell/.emacs.d/" "^.+\\.*$")) "dotemacs/")] "---" ("0 auto-save-list/" ["Tree: .../auto-save-list/" (filesets-open :tree (quote ("/home/bell/.emacs.d/auto-save-list/" "^.+\\.*$")) "dotemacs/")] "---" "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/auto-save-list/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/auto-save-list/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/auto-save-list/"))]) ("1 lisp/" ["Tree: .../lisp/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/" "^.+\\.*$")) "dotemacs/")] "---" ("0 auto-complete-1.3.1/, codepilot/, color-theme-6.6. ..." ("0 auto-complete-1.3.1/" ["Tree: .../auto-complete-1.3.1/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/auto-complete-1.3.1/" "^.+\\.*$")) "dotemacs/")] "---" ["0 dict/" (filesets-browse-dir "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/dict/")] ["1 doc/" (filesets-browse-dir "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/doc/")] ["2 etc/" (filesets-browse-dir "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/etc/")] ["3 COPYING.FDL.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/COPYING.FDL.txt") (quote "dotemacs/"))] ["4 COPYING.GPLv3.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/COPYING.GPLv3.txt") (quote "dotemacs/"))] ["5 Makefile" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/Makefile") (quote "dotemacs/"))] ["6 README.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/README.txt") (quote "dotemacs/"))] ["7 TODO.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/TODO.txt") (quote "dotemacs/"))] ["8 auto-complete-config.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/auto-complete-config.el") (quote "dotemacs/"))] ["9 auto-complete.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/auto-complete.el") (quote "dotemacs/"))] ["a fuzzy.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/fuzzy.el") (quote "dotemacs/"))] ["b popup.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/popup.el") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/auto-complete-1.3.1/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/auto-complete-1.3.1/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/auto-complete-1.3.1/"))]) ("1 codepilot/" ["Tree: .../codepilot/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/codepilot/" "^.+\\.*$")) "dotemacs/")] "---" ["0 common/" (filesets-browse-dir "/home/bell/.emacs.d/lisp/codepilot/common/")] ["1 misc/" (filesets-browse-dir "/home/bell/.emacs.d/lisp/codepilot/misc/")] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/codepilot/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/codepilot/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/codepilot/"))]) ("2 color-theme-6.6.0/" ["Tree: .../color-theme-6.6.0/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/color-theme-6.6.0/" "^.+\\.*$")) "dotemacs/")] "---" ["0 themes/" (filesets-browse-dir "/home/bell/.emacs.d/lisp/color-theme-6.6.0/themes/")] ["1 AUTHORS" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/AUTHORS") (quote "dotemacs/"))] ["2 BUGS" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/BUGS") (quote "dotemacs/"))] ["3 COPYING" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/COPYING") (quote "dotemacs/"))] ["4 ChangeLog" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/ChangeLog") (quote "dotemacs/"))] ["5 HACKING" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/HACKING") (quote "dotemacs/"))] ["6 Makefile" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/Makefile") (quote "dotemacs/"))] ["7 Makefile.defs" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/Makefile.defs") (quote "dotemacs/"))] ["8 README" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/README") (quote "dotemacs/"))] ["9 build-stamp" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/build-stamp") (quote "dotemacs/"))] ["a color-theme-autoloads.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/color-theme-autoloads.el") (quote "dotemacs/"))] ["b color-theme-autoloads.in" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/color-theme-autoloads.in") (quote "dotemacs/"))] ["c color-theme.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/color-theme.el") (quote "dotemacs/"))] ["d configure-stamp" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/configure-stamp") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/color-theme-6.6.0/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/color-theme-6.6.0/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/color-theme-6.6.0/"))])) ("1 company-0.5/, doxymacs/, eim-2.4/" ("3 company-0.5/" ["Tree: .../company-0.5/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/company-0.5/" "^.+\\.*$")) "dotemacs/")] "---" ["0 company-abbrev.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-abbrev.el") (quote "dotemacs/"))] ["1 company-clang.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-clang.el") (quote "dotemacs/"))] ["2 company-css.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-css.el") (quote "dotemacs/"))] ["3 company-dabbrev-code.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-dabbrev-code.el") (quote "dotemacs/"))] ["4 company-dabbrev.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-dabbrev.el") (quote "dotemacs/"))] ["5 company-eclim.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-eclim.el") (quote "dotemacs/"))] ["6 company-elisp.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-elisp.el") (quote "dotemacs/"))] ["7 company-etags.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-etags.el") (quote "dotemacs/"))] ["8 company-files.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-files.el") (quote "dotemacs/"))] ["9 company-gtags.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-gtags.el") (quote "dotemacs/"))] ["a company-ispell.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-ispell.el") (quote "dotemacs/"))] ["b company-keywords.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-keywords.el") (quote "dotemacs/"))] ["c company-nxml.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-nxml.el") (quote "dotemacs/"))] ["d company-oddmuse.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-oddmuse.el") (quote "dotemacs/"))] ["e company-pysmell.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-pysmell.el") (quote "dotemacs/"))] ["f company-ropemacs.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-ropemacs.el") (quote "dotemacs/"))] ["g company-semantic.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-semantic.el") (quote "dotemacs/"))] ["h company-template.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-template.el") (quote "dotemacs/"))] ["i company-tempo.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-tempo.el") (quote "dotemacs/"))] ["j company-xcode.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company-xcode.el") (quote "dotemacs/"))] ["k company.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/company-0.5/company.el") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/company-0.5/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/company-0.5/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/company-0.5/"))]) ("4 doxymacs/" ["Tree: .../doxymacs/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/doxymacs/" "^.+\\.*$")) "dotemacs/")] "---" ["0 doxymacs.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/doxymacs/doxymacs.el") (quote "dotemacs/"))] ["1 doxymacs.elc" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/doxymacs/doxymacs.elc") (quote "dotemacs/"))] ["2 xml-parse.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/doxymacs/xml-parse.el") (quote "dotemacs/"))] ["3 xml-parse.elc" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/doxymacs/xml-parse.elc") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/doxymacs/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/doxymacs/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/doxymacs/"))]) ("5 eim-2.4/" ["Tree: .../eim-2.4/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/eim-2.4/" "^.+\\.*$")) "dotemacs/")] "---" ("0 ChangeLog, ChangeLog.1" ["0 ChangeLog" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/ChangeLog") (quote "dotemacs/"))] ["1 ChangeLog.1" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/ChangeLog.1") (quote "dotemacs/"))]) ("1 Readme, charpy.st" ["2 Readme" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/Readme") (quote "dotemacs/"))] ["3 charpy.st" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/charpy.st") (quote "dotemacs/"))]) ("2 cj.txt, cjeb.txt" ["4 cj.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/cj.txt") (quote "dotemacs/"))] ["5 cjeb.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/cjeb.txt") (quote "dotemacs/"))]) ("3 ebpy.txt, eim-cj-chars.el" ["6 ebpy.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/ebpy.txt") (quote "dotemacs/"))] ["7 eim-cj-chars.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim-cj-chars.el") (quote "dotemacs/"))]) ("4 eim-cj.el, eim-eb-map.el" ["8 eim-cj.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim-cj.el") (quote "dotemacs/"))] ["9 eim-eb-map.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim-eb-map.el") (quote "dotemacs/"))]) ("5 eim-eb.el, eim-extra.el" ["a eim-eb.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim-eb.el") (quote "dotemacs/"))] ["b eim-extra.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim-extra.el") (quote "dotemacs/"))]) ("6 eim-py.el, eim-table.el" ["c eim-py.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim-py.el") (quote "dotemacs/"))] ["d eim-table.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim-table.el") (quote "dotemacs/"))]) ("7 eim-wb-gb2312.el, eim-wb-gbk.el" ["e eim-wb-gb2312.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim-wb-gb2312.el") (quote "dotemacs/"))] ["f eim-wb-gbk.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim-wb-gbk.el") (quote "dotemacs/"))]) ("8 eim-wb.el, eim.el" ["g eim-wb.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim-wb.el") (quote "dotemacs/"))] ["h eim.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/eim.el") (quote "dotemacs/"))]) ("9 makefile, mergepy.pl" ["i makefile" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/makefile") (quote "dotemacs/"))] ["j mergepy.pl" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/mergepy.pl") (quote "dotemacs/"))]) ("a mywb.txt, otherpy.txt" ["k mywb.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/mywb.txt") (quote "dotemacs/"))] ["l otherpy.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/otherpy.txt") (quote "dotemacs/"))]) ("b py.txt, pychr.txt" ["m py.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/py.txt") (quote "dotemacs/"))] ["n pychr.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/pychr.txt") (quote "dotemacs/"))]) ("c pyword2tbl.pl, sanguo.txt" ["o pyword2tbl.pl" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/pyword2tbl.pl") (quote "dotemacs/"))] ["p sanguo.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/sanguo.txt") (quote "dotemacs/"))]) ("d table2chartbl.pl, wb.txt" ["q table2chartbl.pl" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/table2chartbl.pl") (quote "dotemacs/"))] ["r wb.txt" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/wb.txt") (quote "dotemacs/"))]) ["e wbpy.txt" ((filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/eim-2.4/wbpy.txt") (quote "dotemacs/")))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/eim-2.4/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/eim-2.4/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/eim-2.4/"))])) ("2 emms/, magit-1.0.0/, mark-multiple/" ("6 emms/" ["Tree: .../emms/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/emms/" "^.+\\.*$")) "dotemacs/")] "---" ["0 doc/" (filesets-browse-dir "/home/bell/.emacs.d/lisp/emms/doc/")] ["1 lisp/" (filesets-browse-dir "/home/bell/.emacs.d/lisp/emms/lisp/")] ["2 src/" (filesets-browse-dir "/home/bell/.emacs.d/lisp/emms/src/")] ["3 AUTHORS" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/emms/AUTHORS") (quote "dotemacs/"))] ["4 COPYING" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/emms/COPYING") (quote "dotemacs/"))] ["5 FAQ" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/emms/FAQ") (quote "dotemacs/"))] ["6 Makefile" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/emms/Makefile") (quote "dotemacs/"))] ["7 NEWS" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/emms/NEWS") (quote "dotemacs/"))] ["8 README" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/emms/README") (quote "dotemacs/"))] ["9 RELEASE" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/emms/RELEASE") (quote "dotemacs/"))] ["a emms-print-metadata.1" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/emms/emms-print-metadata.1") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/emms/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/emms/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/emms/"))]) ("7 magit-1.0.0/" ["Tree: .../magit-1.0.0/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/magit-1.0.0/" "^.+\\.*$")) "dotemacs/")] "---" ["0 50magit.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/50magit.el") (quote "dotemacs/"))] ["1 Makefile" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/Makefile") (quote "dotemacs/"))] ["2 README.md" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/README.md") (quote "dotemacs/"))] ["3 magit-key-mode.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/magit-key-mode.el") (quote "dotemacs/"))] ["4 magit-pkg.el.in" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/magit-pkg.el.in") (quote "dotemacs/"))] ["5 magit-svn.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/magit-svn.el") (quote "dotemacs/"))] ["6 magit-topgit.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/magit-topgit.el") (quote "dotemacs/"))] ["7 magit.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/magit.el") (quote "dotemacs/"))] ["8 magit.spec.in" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/magit.spec.in") (quote "dotemacs/"))] ["9 magit.texi" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/magit.texi") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/magit-1.0.0/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/magit-1.0.0/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/magit-1.0.0/"))]) ("8 mark-multiple/" ["Tree: .../mark-multiple/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/mark-multiple/" "^.+\\.*$")) "dotemacs/")] "---" ["0 .gitignore" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/mark-multiple/.gitignore") (quote "dotemacs/"))] ["1 README.md" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/mark-multiple/README.md") (quote "dotemacs/"))] ["2 inline-string-rectangle.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/mark-multiple/inline-string-rectangle.el") (quote "dotemacs/"))] ["3 mark-more-like-this.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/mark-multiple/mark-more-like-this.el") (quote "dotemacs/"))] ["4 mark-multiple.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/mark-multiple/mark-multiple.el") (quote "dotemacs/"))] ["5 mm-pabbrev-integration.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/mark-multiple/mm-pabbrev-integration.el") (quote "dotemacs/"))] ["6 rename-sgml-tag.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/mark-multiple/rename-sgml-tag.el") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/mark-multiple/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/mark-multiple/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/mark-multiple/"))])) ("3 nyan-mode/, yasnippet/, ace-jump-mode.el" ("9 nyan-mode/" ["Tree: .../nyan-mode/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/nyan-mode/" "^.+\\.*$")) "dotemacs/")] "---" ["0 img/" (filesets-browse-dir "/home/bell/.emacs.d/lisp/nyan-mode/img/")] ["1 .gitignore" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/nyan-mode/.gitignore") (quote "dotemacs/"))] ["2 README.org" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/nyan-mode/README.org") (quote "dotemacs/"))] ["3 nyan-mode.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/nyan-mode/nyan-mode.el") (quote "dotemacs/"))] ["4 screenshot.png" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/nyan-mode/screenshot.png") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/nyan-mode/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/nyan-mode/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/nyan-mode/"))]) ("a yasnippet/" ["Tree: .../yasnippet/" (filesets-open :tree (quote ("/home/bell/.emacs.d/lisp/yasnippet/" "^.+\\.*$")) "dotemacs/")] "---" ["0 dropdown-list.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/yasnippet/dropdown-list.el") (quote "dotemacs/"))] ["1 yasnippet.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/yasnippet/yasnippet.el") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/yasnippet/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/yasnippet/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/yasnippet/"))]) ["b ace-jump-mode.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/ace-jump-mode.el") (quote "dotemacs/"))]) ("4 anything-config.el, anything.el, ascii.el" ["c anything-config.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/anything-config.el") (quote "dotemacs/"))] ["d anything.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/anything.el") (quote "dotemacs/"))] ["e ascii.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/ascii.el") (quote "dotemacs/"))]) ("5 auto-complete-clang.el, bm.el, browse-kill-ring.el" ["f auto-complete-clang.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/auto-complete-clang.el") (quote "dotemacs/"))] ["g bm.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/bm.el") (quote "dotemacs/"))] ["h browse-kill-ring.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/browse-kill-ring.el") (quote "dotemacs/"))]) ("6 code-imports.el, csv-mode.el, cursor-chg.el" ["i code-imports.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/code-imports.el") (quote "dotemacs/"))] ["j csv-mode.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/csv-mode.el") (quote "dotemacs/"))] ["k cursor-chg.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/cursor-chg.el") (quote "dotemacs/"))]) ("7 dired+.el, doc-mode.el, drag-stuff.el" ["l dired+.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/dired+.el") (quote "dotemacs/"))] ["m doc-mode.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/doc-mode.el") (quote "dotemacs/"))] ["n drag-stuff.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/drag-stuff.el") (quote "dotemacs/"))]) ("8 fill-column-indicator.el, highlight-parentheses.el ..." ["o fill-column-indicator.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/fill-column-indicator.el") (quote "dotemacs/"))] ["p highlight-parentheses.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/highlight-parentheses.el") (quote "dotemacs/"))] ["q highlight-symbol.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/highlight-symbol.el") (quote "dotemacs/"))]) ("9 highlight-tail.el, htmlize.el, ifdef.el" ["r highlight-tail.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/highlight-tail.el") (quote "dotemacs/"))] ["s htmlize.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/htmlize.el") (quote "dotemacs/"))] ["t ifdef.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/ifdef.el") (quote "dotemacs/"))]) ("a multi-term.el, plsql.el, psvn.el" ["u multi-term.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/multi-term.el") (quote "dotemacs/"))] ["v plsql.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/plsql.el") (quote "dotemacs/"))] ["w psvn.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/psvn.el") (quote "dotemacs/"))]) ("b rainbow-mode.el, recent-jump.el, smart-compile.el" ["x rainbow-mode.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/rainbow-mode.el") (quote "dotemacs/"))] ["y recent-jump.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/recent-jump.el") (quote "dotemacs/"))] ["z smart-compile.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/smart-compile.el") (quote "dotemacs/"))]) ("c sourcepair.el, sql-indent.el, sqlplus.el" ["! sourcepair.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/sourcepair.el") (quote "dotemacs/"))] ["\" sql-indent.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/sql-indent.el") (quote "dotemacs/"))] ["# sqlplus.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/sqlplus.el") (quote "dotemacs/"))]) ("d tabbar-ruler.el, tabbar.el, undo-tree.el" ["$ tabbar-ruler.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/tabbar-ruler.el") (quote "dotemacs/"))] ["% tabbar.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/tabbar.el") (quote "dotemacs/"))] ["& undo-tree.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/undo-tree.el") (quote "dotemacs/"))]) ("e unicad.el, vimpulse.el, volatile-highlights.el" ["' unicad.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/unicad.el") (quote "dotemacs/"))] ["( vimpulse.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/vimpulse.el") (quote "dotemacs/"))] [") volatile-highlights.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/volatile-highlights.el") (quote "dotemacs/"))]) ("f win-switch.el, window-numbering.el, winsav.el" ["* win-switch.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/win-switch.el") (quote "dotemacs/"))] ["+ window-numbering.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/window-numbering.el") (quote "dotemacs/"))] [", winsav.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/winsav.el") (quote "dotemacs/"))]) ("g word-count.el, xcscope.el, xgtags.el" ["- word-count.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/word-count.el") (quote "dotemacs/"))] [". xcscope.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/xcscope.el") (quote "dotemacs/"))] ["/ xgtags.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/lisp/xgtags.el") (quote "dotemacs/"))]) "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/lisp/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/lisp/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/lisp/"))]) ("2 plugin/" ["Tree: .../plugin/" (filesets-open :tree (quote ("/home/bell/.emacs.d/plugin/" "^.+\\.*$")) "dotemacs/")] "---" ["0 cedet-1.1.tar.gz" (filesets-file-open nil (quote "/home/bell/.emacs.d/plugin/cedet-1.1.tar.gz") (quote "dotemacs/"))] ["1 cscope-15.8a.tar.gz" (filesets-file-open nil (quote "/home/bell/.emacs.d/plugin/cscope-15.8a.tar.gz") (quote "dotemacs/"))] ["2 doxymacs-1.8.0.tar.gz" (filesets-file-open nil (quote "/home/bell/.emacs.d/plugin/doxymacs-1.8.0.tar.gz") (quote "dotemacs/"))] ["3 drag-stuff-master.zip" (filesets-file-open nil (quote "/home/bell/.emacs.d/plugin/drag-stuff-master.zip") (quote "dotemacs/"))] ["4 ecb-2.40.zip" (filesets-file-open nil (quote "/home/bell/.emacs.d/plugin/ecb-2.40.zip") (quote "dotemacs/"))] ["5 global-6.2.6.tar.tar" (filesets-file-open nil (quote "/home/bell/.emacs.d/plugin/global-6.2.6.tar.tar") (quote "dotemacs/"))] ["6 session-2.3a.tar.gz" (filesets-file-open nil (quote "/home/bell/.emacs.d/plugin/session-2.3a.tar.gz") (quote "dotemacs/"))] ["7 yasnippet-0.6.1c.tar.bz2" (filesets-file-open nil (quote "/home/bell/.emacs.d/plugin/yasnippet-0.6.1c.tar.bz2") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/plugin/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/plugin/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/plugin/"))]) ("3 snippets/" ["Tree: .../snippets/" (filesets-open :tree (quote ("/home/bell/.emacs.d/snippets/" "^.+\\.*$")) "dotemacs/")] "---" ("0 text-mode/" ["Tree: .../text-mode/" (filesets-open :tree (quote ("/home/bell/.emacs.d/snippets/text-mode/" "^.+\\.*$")) "dotemacs/")] "---" ["0 cc-mode/" (filesets-browse-dir "/home/bell/.emacs.d/snippets/text-mode/cc-mode/")] ["1 emacs-lisp-mode/" (filesets-browse-dir "/home/bell/.emacs.d/snippets/text-mode/emacs-lisp-mode/")] ["2 erlang-mode/" (filesets-browse-dir "/home/bell/.emacs.d/snippets/text-mode/erlang-mode/")] ["3 html-mode/" (filesets-browse-dir "/home/bell/.emacs.d/snippets/text-mode/html-mode/")] ["4 markdown-mode/" (filesets-browse-dir "/home/bell/.emacs.d/snippets/text-mode/markdown-mode/")] ["5 nxml-mode/" (filesets-browse-dir "/home/bell/.emacs.d/snippets/text-mode/nxml-mode/")] ["6 org-mode/" (filesets-browse-dir "/home/bell/.emacs.d/snippets/text-mode/org-mode/")] ["7 perl-mode/" (filesets-browse-dir "/home/bell/.emacs.d/snippets/text-mode/perl-mode/")] ["8 sh-mode/" (filesets-browse-dir "/home/bell/.emacs.d/snippets/text-mode/sh-mode/")] ["9 snippet-mode/" (filesets-browse-dir "/home/bell/.emacs.d/snippets/text-mode/snippet-mode/")] ["a email" (filesets-file-open nil (quote "/home/bell/.emacs.d/snippets/text-mode/email") (quote "dotemacs/"))] ["b time" (filesets-file-open nil (quote "/home/bell/.emacs.d/snippets/text-mode/time") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/snippets/text-mode/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/snippets/text-mode/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/snippets/text-mode/"))]) "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/snippets/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/snippets/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/snippets/"))]) ["4 .emacs" (filesets-file-open nil (quote "/home/bell/.emacs.d/.emacs") (quote "dotemacs/"))] ["5 ac-comphist.dat" (filesets-file-open nil (quote "/home/bell/.emacs.d/ac-comphist.dat") (quote "dotemacs/"))] ["6 filesets-cache.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/filesets-cache.el") (quote "dotemacs/"))] ["7 init-basic.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/init-basic.el") (quote "dotemacs/"))] ["8 init-misc.el" (filesets-file-open nil (quote "/home/bell/.emacs.d/init-misc.el") (quote "dotemacs/"))] ["9 init-misc.el~" (filesets-file-open nil (quote "/home/bell/.emacs.d/init-misc.el~") (quote "dotemacs/"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("/home/bell/.emacs.d/" "^.+\\.*$")) (quote "dotemacs/"))] ["Run Command" (filesets-run-cmd nil (quote ("/home/bell/.emacs.d/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "/home/bell/.emacs.d/"))] ["Rebuild this submenu" (filesets-rebuild-this-submenu (quote "dotemacs/"))]) ("1 temp" ["Files: temp" (filesets-open (quote :files) (quote "temp"))] "---" "---" ["Close all files" (filesets-close (quote :files) (quote "temp"))] ["Run Command" (filesets-run-cmd nil (quote "temp") (quote :files))] ["Add current buffer" (filesets-add-buffer (quote "temp") (current-buffer))] ["Remove current buffer" (filesets-remove-buffer (quote "temp") (current-buffer))] ["Rebuild this submenu" (filesets-rebuild-this-submenu (quote "temp"))]) ("2 ~/" ["Files: ~/" (filesets-open (quote :files) (quote "~/"))] "---" ["0 .bash_profile" (filesets-file-open nil (quote "~/.bash_profile") (quote "~/"))] ["1 .bashrc" (filesets-file-open nil (quote "~/.bashrc") (quote "~/"))] ["2 .emacs" (filesets-file-open nil (quote "~/.emacs") (quote "~/"))] ["3 .emacs-places" (filesets-file-open nil (quote "~/.emacs-places") (quote "~/"))] ["4 .emacs.desktop" (filesets-file-open nil (quote "~/.emacs.desktop") (quote "~/"))] ["5 .notes" (filesets-file-open nil (quote "~/.notes") (quote "~/"))] ["6 .profile" (filesets-file-open nil (quote "~/.profile") (quote "~/"))] ["7 .recentf" (filesets-file-open nil (quote "~/.recentf") (quote "~/"))] "---" ["Close all files" (filesets-close (quote :files) (quote "~/"))] ["Run Command" (filesets-run-cmd nil (quote "~/") (quote :files))] ["Add current buffer" (filesets-add-buffer (quote "~/") (current-buffer))] ["Remove current buffer" (filesets-remove-buffer (quote "~/") (current-buffer))] ["Rebuild this submenu" (filesets-rebuild-this-submenu (quote "~/"))]) ("3 ~/.emacs.d" ["Tree: ~/.emacs.d/" (filesets-open :tree (quote ("~/.emacs.d/" "^.+\\.*$")) "~/.emacs.d")] "---" ("0 auto-save-list/" ["Tree: .../auto-save-list/" (filesets-open :tree (quote ("~/.emacs.d/auto-save-list/" "^.+\\.*$")) "~/.emacs.d")] "---" "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/auto-save-list/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/auto-save-list/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/auto-save-list/"))]) ("1 lisp/" ["Tree: .../lisp/" (filesets-open :tree (quote ("~/.emacs.d/lisp/" "^.+\\.*$")) "~/.emacs.d")] "---" ("0 auto-complete-1.3.1/, codepilot/, color-theme-6.6. ..." ("0 auto-complete-1.3.1/" ["Tree: .../auto-complete-1.3.1/" (filesets-open :tree (quote ("~/.emacs.d/lisp/auto-complete-1.3.1/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 dict/" (filesets-browse-dir "~/.emacs.d/lisp/auto-complete-1.3.1/dict/")] ["1 doc/" (filesets-browse-dir "~/.emacs.d/lisp/auto-complete-1.3.1/doc/")] ["2 etc/" (filesets-browse-dir "~/.emacs.d/lisp/auto-complete-1.3.1/etc/")] ["3 COPYING.FDL.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/auto-complete-1.3.1/COPYING.FDL.txt") (quote "~/.emacs.d"))] ["4 COPYING.GPLv3.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/auto-complete-1.3.1/COPYING.GPLv3.txt") (quote "~/.emacs.d"))] ["5 Makefile" (filesets-file-open nil (quote "~/.emacs.d/lisp/auto-complete-1.3.1/Makefile") (quote "~/.emacs.d"))] ["6 README.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/auto-complete-1.3.1/README.txt") (quote "~/.emacs.d"))] ["7 TODO.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/auto-complete-1.3.1/TODO.txt") (quote "~/.emacs.d"))] ["8 auto-complete-config.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/auto-complete-1.3.1/auto-complete-config.el") (quote "~/.emacs.d"))] ["9 auto-complete.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/auto-complete-1.3.1/auto-complete.el") (quote "~/.emacs.d"))] ["a fuzzy.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/auto-complete-1.3.1/fuzzy.el") (quote "~/.emacs.d"))] ["b popup.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/auto-complete-1.3.1/popup.el") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/auto-complete-1.3.1/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/auto-complete-1.3.1/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/auto-complete-1.3.1/"))]) ("1 codepilot/" ["Tree: .../codepilot/" (filesets-open :tree (quote ("~/.emacs.d/lisp/codepilot/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 common/" (filesets-browse-dir "~/.emacs.d/lisp/codepilot/common/")] ["1 misc/" (filesets-browse-dir "~/.emacs.d/lisp/codepilot/misc/")] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/codepilot/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/codepilot/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/codepilot/"))]) ("2 color-theme-6.6.0/" ["Tree: .../color-theme-6.6.0/" (filesets-open :tree (quote ("~/.emacs.d/lisp/color-theme-6.6.0/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 themes/" (filesets-browse-dir "~/.emacs.d/lisp/color-theme-6.6.0/themes/")] ["1 AUTHORS" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/AUTHORS") (quote "~/.emacs.d"))] ["2 BUGS" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/BUGS") (quote "~/.emacs.d"))] ["3 COPYING" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/COPYING") (quote "~/.emacs.d"))] ["4 ChangeLog" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/ChangeLog") (quote "~/.emacs.d"))] ["5 HACKING" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/HACKING") (quote "~/.emacs.d"))] ["6 Makefile" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/Makefile") (quote "~/.emacs.d"))] ["7 Makefile.defs" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/Makefile.defs") (quote "~/.emacs.d"))] ["8 README" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/README") (quote "~/.emacs.d"))] ["9 build-stamp" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/build-stamp") (quote "~/.emacs.d"))] ["a color-theme-autoloads.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/color-theme-autoloads.el") (quote "~/.emacs.d"))] ["b color-theme-autoloads.in" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/color-theme-autoloads.in") (quote "~/.emacs.d"))] ["c color-theme.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/color-theme.el") (quote "~/.emacs.d"))] ["d configure-stamp" (filesets-file-open nil (quote "~/.emacs.d/lisp/color-theme-6.6.0/configure-stamp") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/color-theme-6.6.0/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/color-theme-6.6.0/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/color-theme-6.6.0/"))])) ("1 company-0.5/, doxymacs/, eim-2.4/" ("3 company-0.5/" ["Tree: .../company-0.5/" (filesets-open :tree (quote ("~/.emacs.d/lisp/company-0.5/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 company-abbrev.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-abbrev.el") (quote "~/.emacs.d"))] ["1 company-clang.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-clang.el") (quote "~/.emacs.d"))] ["2 company-css.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-css.el") (quote "~/.emacs.d"))] ["3 company-dabbrev-code.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-dabbrev-code.el") (quote "~/.emacs.d"))] ["4 company-dabbrev.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-dabbrev.el") (quote "~/.emacs.d"))] ["5 company-eclim.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-eclim.el") (quote "~/.emacs.d"))] ["6 company-elisp.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-elisp.el") (quote "~/.emacs.d"))] ["7 company-etags.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-etags.el") (quote "~/.emacs.d"))] ["8 company-files.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-files.el") (quote "~/.emacs.d"))] ["9 company-gtags.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-gtags.el") (quote "~/.emacs.d"))] ["a company-ispell.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-ispell.el") (quote "~/.emacs.d"))] ["b company-keywords.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-keywords.el") (quote "~/.emacs.d"))] ["c company-nxml.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-nxml.el") (quote "~/.emacs.d"))] ["d company-oddmuse.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-oddmuse.el") (quote "~/.emacs.d"))] ["e company-pysmell.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-pysmell.el") (quote "~/.emacs.d"))] ["f company-ropemacs.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-ropemacs.el") (quote "~/.emacs.d"))] ["g company-semantic.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-semantic.el") (quote "~/.emacs.d"))] ["h company-template.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-template.el") (quote "~/.emacs.d"))] ["i company-tempo.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-tempo.el") (quote "~/.emacs.d"))] ["j company-xcode.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company-xcode.el") (quote "~/.emacs.d"))] ["k company.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/company-0.5/company.el") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/company-0.5/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/company-0.5/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/company-0.5/"))]) ("4 doxymacs/" ["Tree: .../doxymacs/" (filesets-open :tree (quote ("~/.emacs.d/lisp/doxymacs/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 doxymacs.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/doxymacs/doxymacs.el") (quote "~/.emacs.d"))] ["1 doxymacs.elc" (filesets-file-open nil (quote "~/.emacs.d/lisp/doxymacs/doxymacs.elc") (quote "~/.emacs.d"))] ["2 xml-parse.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/doxymacs/xml-parse.el") (quote "~/.emacs.d"))] ["3 xml-parse.elc" (filesets-file-open nil (quote "~/.emacs.d/lisp/doxymacs/xml-parse.elc") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/doxymacs/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/doxymacs/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/doxymacs/"))]) ("5 eim-2.4/" ["Tree: .../eim-2.4/" (filesets-open :tree (quote ("~/.emacs.d/lisp/eim-2.4/" "^.+\\.*$")) "~/.emacs.d")] "---" ("0 ChangeLog, ChangeLog.1" ["0 ChangeLog" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/ChangeLog") (quote "~/.emacs.d"))] ["1 ChangeLog.1" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/ChangeLog.1") (quote "~/.emacs.d"))]) ("1 Readme, charpy.st" ["2 Readme" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/Readme") (quote "~/.emacs.d"))] ["3 charpy.st" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/charpy.st") (quote "~/.emacs.d"))]) ("2 cj.txt, cjeb.txt" ["4 cj.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/cj.txt") (quote "~/.emacs.d"))] ["5 cjeb.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/cjeb.txt") (quote "~/.emacs.d"))]) ("3 ebpy.txt, eim-cj-chars.el" ["6 ebpy.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/ebpy.txt") (quote "~/.emacs.d"))] ["7 eim-cj-chars.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim-cj-chars.el") (quote "~/.emacs.d"))]) ("4 eim-cj.el, eim-eb-map.el" ["8 eim-cj.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim-cj.el") (quote "~/.emacs.d"))] ["9 eim-eb-map.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim-eb-map.el") (quote "~/.emacs.d"))]) ("5 eim-eb.el, eim-extra.el" ["a eim-eb.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim-eb.el") (quote "~/.emacs.d"))] ["b eim-extra.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim-extra.el") (quote "~/.emacs.d"))]) ("6 eim-py.el, eim-table.el" ["c eim-py.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim-py.el") (quote "~/.emacs.d"))] ["d eim-table.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim-table.el") (quote "~/.emacs.d"))]) ("7 eim-wb-gb2312.el, eim-wb-gbk.el" ["e eim-wb-gb2312.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim-wb-gb2312.el") (quote "~/.emacs.d"))] ["f eim-wb-gbk.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim-wb-gbk.el") (quote "~/.emacs.d"))]) ("8 eim-wb.el, eim.el" ["g eim-wb.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim-wb.el") (quote "~/.emacs.d"))] ["h eim.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/eim.el") (quote "~/.emacs.d"))]) ("9 makefile, mergepy.pl" ["i makefile" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/makefile") (quote "~/.emacs.d"))] ["j mergepy.pl" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/mergepy.pl") (quote "~/.emacs.d"))]) ("a mywb.txt, otherpy.txt" ["k mywb.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/mywb.txt") (quote "~/.emacs.d"))] ["l otherpy.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/otherpy.txt") (quote "~/.emacs.d"))]) ("b py.txt, pychr.txt" ["m py.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/py.txt") (quote "~/.emacs.d"))] ["n pychr.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/pychr.txt") (quote "~/.emacs.d"))]) ("c pyword2tbl.pl, sanguo.txt" ["o pyword2tbl.pl" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/pyword2tbl.pl") (quote "~/.emacs.d"))] ["p sanguo.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/sanguo.txt") (quote "~/.emacs.d"))]) ("d table2chartbl.pl, wb.txt" ["q table2chartbl.pl" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/table2chartbl.pl") (quote "~/.emacs.d"))] ["r wb.txt" (filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/wb.txt") (quote "~/.emacs.d"))]) ["e wbpy.txt" ((filesets-file-open nil (quote "~/.emacs.d/lisp/eim-2.4/wbpy.txt") (quote "~/.emacs.d")))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/eim-2.4/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/eim-2.4/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/eim-2.4/"))])) ("2 emms/, magit-1.0.0/, mark-multiple/" ("6 emms/" ["Tree: .../emms/" (filesets-open :tree (quote ("~/.emacs.d/lisp/emms/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 doc/" (filesets-browse-dir "~/.emacs.d/lisp/emms/doc/")] ["1 lisp/" (filesets-browse-dir "~/.emacs.d/lisp/emms/lisp/")] ["2 src/" (filesets-browse-dir "~/.emacs.d/lisp/emms/src/")] ["3 AUTHORS" (filesets-file-open nil (quote "~/.emacs.d/lisp/emms/AUTHORS") (quote "~/.emacs.d"))] ["4 COPYING" (filesets-file-open nil (quote "~/.emacs.d/lisp/emms/COPYING") (quote "~/.emacs.d"))] ["5 FAQ" (filesets-file-open nil (quote "~/.emacs.d/lisp/emms/FAQ") (quote "~/.emacs.d"))] ["6 Makefile" (filesets-file-open nil (quote "~/.emacs.d/lisp/emms/Makefile") (quote "~/.emacs.d"))] ["7 NEWS" (filesets-file-open nil (quote "~/.emacs.d/lisp/emms/NEWS") (quote "~/.emacs.d"))] ["8 README" (filesets-file-open nil (quote "~/.emacs.d/lisp/emms/README") (quote "~/.emacs.d"))] ["9 RELEASE" (filesets-file-open nil (quote "~/.emacs.d/lisp/emms/RELEASE") (quote "~/.emacs.d"))] ["a emms-print-metadata.1" (filesets-file-open nil (quote "~/.emacs.d/lisp/emms/emms-print-metadata.1") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/emms/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/emms/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/emms/"))]) ("7 magit-1.0.0/" ["Tree: .../magit-1.0.0/" (filesets-open :tree (quote ("~/.emacs.d/lisp/magit-1.0.0/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 50magit.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/magit-1.0.0/50magit.el") (quote "~/.emacs.d"))] ["1 Makefile" (filesets-file-open nil (quote "~/.emacs.d/lisp/magit-1.0.0/Makefile") (quote "~/.emacs.d"))] ["2 README.md" (filesets-file-open nil (quote "~/.emacs.d/lisp/magit-1.0.0/README.md") (quote "~/.emacs.d"))] ["3 magit-key-mode.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/magit-1.0.0/magit-key-mode.el") (quote "~/.emacs.d"))] ["4 magit-pkg.el.in" (filesets-file-open nil (quote "~/.emacs.d/lisp/magit-1.0.0/magit-pkg.el.in") (quote "~/.emacs.d"))] ["5 magit-svn.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/magit-1.0.0/magit-svn.el") (quote "~/.emacs.d"))] ["6 magit-topgit.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/magit-1.0.0/magit-topgit.el") (quote "~/.emacs.d"))] ["7 magit.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/magit-1.0.0/magit.el") (quote "~/.emacs.d"))] ["8 magit.spec.in" (filesets-file-open nil (quote "~/.emacs.d/lisp/magit-1.0.0/magit.spec.in") (quote "~/.emacs.d"))] ["9 magit.texi" (filesets-file-open nil (quote "~/.emacs.d/lisp/magit-1.0.0/magit.texi") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/magit-1.0.0/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/magit-1.0.0/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/magit-1.0.0/"))]) ("8 mark-multiple/" ["Tree: .../mark-multiple/" (filesets-open :tree (quote ("~/.emacs.d/lisp/mark-multiple/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 .gitignore" (filesets-file-open nil (quote "~/.emacs.d/lisp/mark-multiple/.gitignore") (quote "~/.emacs.d"))] ["1 README.md" (filesets-file-open nil (quote "~/.emacs.d/lisp/mark-multiple/README.md") (quote "~/.emacs.d"))] ["2 inline-string-rectangle.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/mark-multiple/inline-string-rectangle.el") (quote "~/.emacs.d"))] ["3 mark-more-like-this.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/mark-multiple/mark-more-like-this.el") (quote "~/.emacs.d"))] ["4 mark-multiple.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/mark-multiple/mark-multiple.el") (quote "~/.emacs.d"))] ["5 mm-pabbrev-integration.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/mark-multiple/mm-pabbrev-integration.el") (quote "~/.emacs.d"))] ["6 rename-sgml-tag.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/mark-multiple/rename-sgml-tag.el") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/mark-multiple/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/mark-multiple/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/mark-multiple/"))])) ("3 nyan-mode/, yasnippet/, ace-jump-mode.el" ("9 nyan-mode/" ["Tree: .../nyan-mode/" (filesets-open :tree (quote ("~/.emacs.d/lisp/nyan-mode/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 img/" (filesets-browse-dir "~/.emacs.d/lisp/nyan-mode/img/")] ["1 .gitignore" (filesets-file-open nil (quote "~/.emacs.d/lisp/nyan-mode/.gitignore") (quote "~/.emacs.d"))] ["2 README.org" (filesets-file-open nil (quote "~/.emacs.d/lisp/nyan-mode/README.org") (quote "~/.emacs.d"))] ["3 nyan-mode.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/nyan-mode/nyan-mode.el") (quote "~/.emacs.d"))] ["4 screenshot.png" (filesets-file-open nil (quote "~/.emacs.d/lisp/nyan-mode/screenshot.png") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/nyan-mode/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/nyan-mode/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/nyan-mode/"))]) ("a yasnippet/" ["Tree: .../yasnippet/" (filesets-open :tree (quote ("~/.emacs.d/lisp/yasnippet/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 dropdown-list.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/yasnippet/dropdown-list.el") (quote "~/.emacs.d"))] ["1 yasnippet.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/yasnippet/yasnippet.el") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/yasnippet/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/yasnippet/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/yasnippet/"))]) ["b ace-jump-mode.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/ace-jump-mode.el") (quote "~/.emacs.d"))]) ("4 anything-config.el, anything.el, ascii.el" ["c anything-config.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/anything-config.el") (quote "~/.emacs.d"))] ["d anything.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/anything.el") (quote "~/.emacs.d"))] ["e ascii.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/ascii.el") (quote "~/.emacs.d"))]) ("5 auto-complete-clang.el, bm.el, browse-kill-ring.el" ["f auto-complete-clang.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/auto-complete-clang.el") (quote "~/.emacs.d"))] ["g bm.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/bm.el") (quote "~/.emacs.d"))] ["h browse-kill-ring.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/browse-kill-ring.el") (quote "~/.emacs.d"))]) ("6 code-imports.el, csv-mode.el, cursor-chg.el" ["i code-imports.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/code-imports.el") (quote "~/.emacs.d"))] ["j csv-mode.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/csv-mode.el") (quote "~/.emacs.d"))] ["k cursor-chg.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/cursor-chg.el") (quote "~/.emacs.d"))]) ("7 dired+.el, doc-mode.el, drag-stuff.el" ["l dired+.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/dired+.el") (quote "~/.emacs.d"))] ["m doc-mode.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/doc-mode.el") (quote "~/.emacs.d"))] ["n drag-stuff.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/drag-stuff.el") (quote "~/.emacs.d"))]) ("8 fill-column-indicator.el, highlight-parentheses.el ..." ["o fill-column-indicator.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/fill-column-indicator.el") (quote "~/.emacs.d"))] ["p highlight-parentheses.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/highlight-parentheses.el") (quote "~/.emacs.d"))] ["q highlight-symbol.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/highlight-symbol.el") (quote "~/.emacs.d"))]) ("9 highlight-tail.el, htmlize.el, ifdef.el" ["r highlight-tail.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/highlight-tail.el") (quote "~/.emacs.d"))] ["s htmlize.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/htmlize.el") (quote "~/.emacs.d"))] ["t ifdef.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/ifdef.el") (quote "~/.emacs.d"))]) ("a multi-term.el, plsql.el, psvn.el" ["u multi-term.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/multi-term.el") (quote "~/.emacs.d"))] ["v plsql.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/plsql.el") (quote "~/.emacs.d"))] ["w psvn.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/psvn.el") (quote "~/.emacs.d"))]) ("b rainbow-mode.el, recent-jump.el, smart-compile.el" ["x rainbow-mode.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/rainbow-mode.el") (quote "~/.emacs.d"))] ["y recent-jump.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/recent-jump.el") (quote "~/.emacs.d"))] ["z smart-compile.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/smart-compile.el") (quote "~/.emacs.d"))]) ("c sourcepair.el, sql-indent.el, sqlplus.el" ["! sourcepair.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/sourcepair.el") (quote "~/.emacs.d"))] ["\" sql-indent.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/sql-indent.el") (quote "~/.emacs.d"))] ["# sqlplus.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/sqlplus.el") (quote "~/.emacs.d"))]) ("d tabbar-ruler.el, tabbar.el, undo-tree.el" ["$ tabbar-ruler.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/tabbar-ruler.el") (quote "~/.emacs.d"))] ["% tabbar.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/tabbar.el") (quote "~/.emacs.d"))] ["& undo-tree.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/undo-tree.el") (quote "~/.emacs.d"))]) ("e unicad.el, vimpulse.el, volatile-highlights.el" ["' unicad.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/unicad.el") (quote "~/.emacs.d"))] ["( vimpulse.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/vimpulse.el") (quote "~/.emacs.d"))] [") volatile-highlights.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/volatile-highlights.el") (quote "~/.emacs.d"))]) ("f win-switch.el, window-numbering.el, winsav.el" ["* win-switch.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/win-switch.el") (quote "~/.emacs.d"))] ["+ window-numbering.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/window-numbering.el") (quote "~/.emacs.d"))] [", winsav.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/winsav.el") (quote "~/.emacs.d"))]) ("g word-count.el, xcscope.el, xgtags.el" ["- word-count.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/word-count.el") (quote "~/.emacs.d"))] [". xcscope.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/xcscope.el") (quote "~/.emacs.d"))] ["/ xgtags.el" (filesets-file-open nil (quote "~/.emacs.d/lisp/xgtags.el") (quote "~/.emacs.d"))]) "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/lisp/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/lisp/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/lisp/"))]) ("2 plugin/" ["Tree: .../plugin/" (filesets-open :tree (quote ("~/.emacs.d/plugin/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 cedet-1.1.tar.gz" (filesets-file-open nil (quote "~/.emacs.d/plugin/cedet-1.1.tar.gz") (quote "~/.emacs.d"))] ["1 cscope-15.8a.tar.gz" (filesets-file-open nil (quote "~/.emacs.d/plugin/cscope-15.8a.tar.gz") (quote "~/.emacs.d"))] ["2 doxymacs-1.8.0.tar.gz" (filesets-file-open nil (quote "~/.emacs.d/plugin/doxymacs-1.8.0.tar.gz") (quote "~/.emacs.d"))] ["3 drag-stuff-master.zip" (filesets-file-open nil (quote "~/.emacs.d/plugin/drag-stuff-master.zip") (quote "~/.emacs.d"))] ["4 ecb-2.40.zip" (filesets-file-open nil (quote "~/.emacs.d/plugin/ecb-2.40.zip") (quote "~/.emacs.d"))] ["5 global-6.2.6.tar.tar" (filesets-file-open nil (quote "~/.emacs.d/plugin/global-6.2.6.tar.tar") (quote "~/.emacs.d"))] ["6 session-2.3a.tar.gz" (filesets-file-open nil (quote "~/.emacs.d/plugin/session-2.3a.tar.gz") (quote "~/.emacs.d"))] ["7 yasnippet-0.6.1c.tar.bz2" (filesets-file-open nil (quote "~/.emacs.d/plugin/yasnippet-0.6.1c.tar.bz2") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/plugin/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/plugin/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/plugin/"))]) ("3 snippets/" ["Tree: .../snippets/" (filesets-open :tree (quote ("~/.emacs.d/snippets/" "^.+\\.*$")) "~/.emacs.d")] "---" ("0 text-mode/" ["Tree: .../text-mode/" (filesets-open :tree (quote ("~/.emacs.d/snippets/text-mode/" "^.+\\.*$")) "~/.emacs.d")] "---" ["0 cc-mode/" (filesets-browse-dir "~/.emacs.d/snippets/text-mode/cc-mode/")] ["1 emacs-lisp-mode/" (filesets-browse-dir "~/.emacs.d/snippets/text-mode/emacs-lisp-mode/")] ["2 erlang-mode/" (filesets-browse-dir "~/.emacs.d/snippets/text-mode/erlang-mode/")] ["3 html-mode/" (filesets-browse-dir "~/.emacs.d/snippets/text-mode/html-mode/")] ["4 markdown-mode/" (filesets-browse-dir "~/.emacs.d/snippets/text-mode/markdown-mode/")] ["5 nxml-mode/" (filesets-browse-dir "~/.emacs.d/snippets/text-mode/nxml-mode/")] ["6 org-mode/" (filesets-browse-dir "~/.emacs.d/snippets/text-mode/org-mode/")] ["7 perl-mode/" (filesets-browse-dir "~/.emacs.d/snippets/text-mode/perl-mode/")] ["8 sh-mode/" (filesets-browse-dir "~/.emacs.d/snippets/text-mode/sh-mode/")] ["9 snippet-mode/" (filesets-browse-dir "~/.emacs.d/snippets/text-mode/snippet-mode/")] ["a email" (filesets-file-open nil (quote "~/.emacs.d/snippets/text-mode/email") (quote "~/.emacs.d"))] ["b time" (filesets-file-open nil (quote "~/.emacs.d/snippets/text-mode/time") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/snippets/text-mode/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/snippets/text-mode/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/snippets/text-mode/"))]) "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/snippets/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/snippets/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/snippets/"))]) ["4 .emacs" (filesets-file-open nil (quote "~/.emacs.d/.emacs") (quote "~/.emacs.d"))] ["5 ac-comphist.dat" (filesets-file-open nil (quote "~/.emacs.d/ac-comphist.dat") (quote "~/.emacs.d"))] ["6 filesets-cache.el" (filesets-file-open nil (quote "~/.emacs.d/filesets-cache.el") (quote "~/.emacs.d"))] ["7 init-basic.el" (filesets-file-open nil (quote "~/.emacs.d/init-basic.el") (quote "~/.emacs.d"))] ["8 init-misc.el" (filesets-file-open nil (quote "~/.emacs.d/init-misc.el") (quote "~/.emacs.d"))] ["9 init-misc.el~" (filesets-file-open nil (quote "~/.emacs.d/init-misc.el~") (quote "~/.emacs.d"))] "---" ["Close all files" (filesets-close (quote :tree) (quote ("~/.emacs.d/" "^.+\\.*$")) (quote "~/.emacs.d"))] ["Run Command" (filesets-run-cmd nil (quote ("~/.emacs.d/" "^.+\\.*$")) (quote :tree))] ["Browse with `dired'" (filesets-browse-dir (quote "~/.emacs.d/"))] ["Rebuild this submenu" (filesets-rebuild-this-submenu (quote "~/.emacs.d"))])))

(setq filesets-ingroup-cache 'nil)

(setq filesets-cache-version "1.8.4")

